---
- name: "{{ role_name }} | {{ ansible_distribution }} | Uncomment [multilib] repo in pacman.conf"
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: '^#\[multilib\]'
    line: '[multilib]'
    state: present
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Uncomment Include line for multilib in pacman.conf"
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: '^#Include = /etc/pacman.d/mirrorlist'
    line: 'Include = /etc/pacman.d/mirrorlist'
    insertafter: '^\[multilib\]'
    state: present
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Update pacman database after enabling multilib"
  ansible.builtin.shell: pacman -Sy --noconfirm
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Install Nvidia packages"
  community.general.pacman:
    name:
      - nvidia
      - nvidia-utils
      - nvidia-settings
      - lib32-nvidia-utils
      - libva-nvidia-driver
    state: present
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Create nvidia application profiles directory"
  ansible.builtin.file:
    path: /etc/nvidia/nvidia-application-profiles-rc.d
    state: directory
    mode: '0755'
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Deploy Wayland compositor VRAM optimization profile"
  ansible.builtin.copy:
    src: 50-limit-free-buffer-pool-in-wayland-compositors.json
    dest: /etc/nvidia/nvidia-application-profiles-rc.d/50-limit-free-buffer-pool-in-wayland-compositors.json
    owner: root
    group: root
    mode: '0644'
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Add NVIDIA modules to mkinitcpio for early loading"
  ansible.builtin.lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: '^MODULES='
    line: 'MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)'
    backup: true
  become: true
  notify: regenerate initramfs

- name: "{{ role_name }} | {{ ansible_distribution }} | Ensure pacman hooks directory exists"
  ansible.builtin.file:
    path: /etc/pacman.d/hooks
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Install pacman hook for automatic initramfs regeneration"
  ansible.builtin.copy:
    src: nvidia.hook
    dest: /etc/pacman.d/hooks/nvidia.hook
    owner: root
    group: root
    mode: '0644'
  become: true

# -------------------
# - Hybrid Graphics
# -------------------

- name: "{{ role_name }} | {{ ansible_distribution }} | Detect if system has integrated GPU (hybrid graphics)"
  ansible.builtin.shell: lspci -d ::03xx | wc -l
  register: gpu_count
  changed_when: false

- name: "{{ role_name }} | {{ ansible_distribution }} | Set hybrid graphics fact"
  ansible.builtin.set_fact:
    has_hybrid_graphics: "{{ gpu_count.stdout | int > 1 }}"

- name: "{{ role_name }} | {{ ansible_distribution }} | Install nvidia-prime for hybrid graphics systems"
  community.general.pacman:
    name: nvidia-prime
    state: present
  when: has_hybrid_graphics
  become: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Enable NVIDIA power management for hybrid graphics"
  ansible.builtin.copy:
    content: |
      # Enable runtime PM for NVIDIA VGA/3D controller devices on adding device
      ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030000", TEST=="power/control", ATTR{power/control}="auto"
      ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030200", TEST=="power/control", ATTR{power/control}="auto"

      # Enable runtime PM for NVIDIA VGA/3D controller devices on driver bind
      ACTION=="bind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030000", TEST=="power/control", ATTR{power/control}="auto"
      ACTION=="bind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030200", TEST=="power/control", ATTR{power/control}="auto"

      # Disable runtime PM for NVIDIA VGA/3D controller devices on driver unbind
      ACTION=="unbind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030000", TEST=="power/control", ATTR{power/control}="on"
      ACTION=="unbind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030200", TEST=="power/control", ATTR{power/control}="on"
    dest: /etc/udev/rules.d/80-nvidia-pm.rules
    owner: root
    group: root
    mode: '0644'
  become: true
  when: has_hybrid_graphics

- name: "{{ role_name }} | {{ ansible_distribution }} | Configure NVIDIA dynamic power management"
  ansible.builtin.copy:
    content: 'options nvidia "NVreg_DynamicPowerManagement=0x02"'
    dest: /etc/modprobe.d/nvidia-pm.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  when: has_hybrid_graphics

- name: "{{ role_name }} | {{ ansible_distribution }} | Enable nvidia-persistenced service for hybrid graphics"
  ansible.builtin.systemd:
    name: nvidia-persistenced.service
    enabled: yes
  become: true
  when: has_hybrid_graphics